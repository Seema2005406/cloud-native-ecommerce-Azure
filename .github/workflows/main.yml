name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build Docker image
      run: |
        docker build -t flask-ecommerce .

    - name: Log in to ACR
      run: |
        echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ secrets.ACR_LOGIN_SERVER }} -u ${{ secrets.ACR_USERNAME }} --password-stdin

    - name: Push Docker image to ACR
      run: |
        docker tag flask-ecommerce ${{ secrets.ACR_LOGIN_SERVER }}/flask-ecommerce:latest
        docker push ${{ secrets.ACR_LOGIN_SERVER }}/flask-ecommerce:latest

    - name: Set up Helm
      uses: azure/setup-helm@v1

    - name: Log in to Azure
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Set up kubectl context
      run: |
        az aks get-credentials --resource-group flask-ecommerce-rg --name flask-ecommerce-aks

    - name: Deploy to AKS
      run: |
        helm upgrade --install flask-ecommerce helm_chart/ --namespace default --set image.repository=${{ secrets.ACR_LOGIN_SERVER }}/flask-ecommerce,image.tag=latest
